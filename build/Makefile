# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.25

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/leise/Downloads/PLC_IDE

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/leise/Downloads/PLC_IDE/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/leise/Downloads/PLC_IDE/build/CMakeFiles /home/leise/Downloads/PLC_IDE/build//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/leise/Downloads/PLC_IDE/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named L-PLC_IDE

# Build rule for target.
L-PLC_IDE: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 L-PLC_IDE
.PHONY : L-PLC_IDE

# fast build rule for target.
L-PLC_IDE/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/build
.PHONY : L-PLC_IDE/fast

lib/ThirdParty/GL/unix/gl3w.o: lib/ThirdParty/GL/unix/gl3w.c.o
.PHONY : lib/ThirdParty/GL/unix/gl3w.o

# target to build an object file
lib/ThirdParty/GL/unix/gl3w.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/GL/unix/gl3w.c.o
.PHONY : lib/ThirdParty/GL/unix/gl3w.c.o

lib/ThirdParty/GL/unix/gl3w.i: lib/ThirdParty/GL/unix/gl3w.c.i
.PHONY : lib/ThirdParty/GL/unix/gl3w.i

# target to preprocess a source file
lib/ThirdParty/GL/unix/gl3w.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/GL/unix/gl3w.c.i
.PHONY : lib/ThirdParty/GL/unix/gl3w.c.i

lib/ThirdParty/GL/unix/gl3w.s: lib/ThirdParty/GL/unix/gl3w.c.s
.PHONY : lib/ThirdParty/GL/unix/gl3w.s

# target to generate assembly for a file
lib/ThirdParty/GL/unix/gl3w.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/GL/unix/gl3w.c.s
.PHONY : lib/ThirdParty/GL/unix/gl3w.c.s

lib/ThirdParty/JSON/cJSON.o: lib/ThirdParty/JSON/cJSON.c.o
.PHONY : lib/ThirdParty/JSON/cJSON.o

# target to build an object file
lib/ThirdParty/JSON/cJSON.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/JSON/cJSON.c.o
.PHONY : lib/ThirdParty/JSON/cJSON.c.o

lib/ThirdParty/JSON/cJSON.i: lib/ThirdParty/JSON/cJSON.c.i
.PHONY : lib/ThirdParty/JSON/cJSON.i

# target to preprocess a source file
lib/ThirdParty/JSON/cJSON.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/JSON/cJSON.c.i
.PHONY : lib/ThirdParty/JSON/cJSON.c.i

lib/ThirdParty/JSON/cJSON.s: lib/ThirdParty/JSON/cJSON.c.s
.PHONY : lib/ThirdParty/JSON/cJSON.s

# target to generate assembly for a file
lib/ThirdParty/JSON/cJSON.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/JSON/cJSON.c.s
.PHONY : lib/ThirdParty/JSON/cJSON.c.s

lib/ThirdParty/SHA2/WjCryptLib_Sha256.o: lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.o
.PHONY : lib/ThirdParty/SHA2/WjCryptLib_Sha256.o

# target to build an object file
lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.o
.PHONY : lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.o

lib/ThirdParty/SHA2/WjCryptLib_Sha256.i: lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.i
.PHONY : lib/ThirdParty/SHA2/WjCryptLib_Sha256.i

# target to preprocess a source file
lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.i
.PHONY : lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.i

lib/ThirdParty/SHA2/WjCryptLib_Sha256.s: lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.s
.PHONY : lib/ThirdParty/SHA2/WjCryptLib_Sha256.s

# target to generate assembly for a file
lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.s
.PHONY : lib/ThirdParty/SHA2/WjCryptLib_Sha256.c.s

lib/ThirdParty/imgui/imgui.o: lib/ThirdParty/imgui/imgui.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui.o

# target to build an object file
lib/ThirdParty/imgui/imgui.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui.cpp.o

lib/ThirdParty/imgui/imgui.i: lib/ThirdParty/imgui/imgui.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui.cpp.i

lib/ThirdParty/imgui/imgui.s: lib/ThirdParty/imgui/imgui.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui.cpp.s

lib/ThirdParty/imgui/imgui_demo.o: lib/ThirdParty/imgui/imgui_demo.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_demo.o

# target to build an object file
lib/ThirdParty/imgui/imgui_demo.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_demo.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_demo.cpp.o

lib/ThirdParty/imgui/imgui_demo.i: lib/ThirdParty/imgui/imgui_demo.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_demo.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui_demo.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_demo.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_demo.cpp.i

lib/ThirdParty/imgui/imgui_demo.s: lib/ThirdParty/imgui/imgui_demo.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_demo.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui_demo.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_demo.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_demo.cpp.s

lib/ThirdParty/imgui/imgui_draw.o: lib/ThirdParty/imgui/imgui_draw.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_draw.o

# target to build an object file
lib/ThirdParty/imgui/imgui_draw.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_draw.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_draw.cpp.o

lib/ThirdParty/imgui/imgui_draw.i: lib/ThirdParty/imgui/imgui_draw.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_draw.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui_draw.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_draw.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_draw.cpp.i

lib/ThirdParty/imgui/imgui_draw.s: lib/ThirdParty/imgui/imgui_draw.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_draw.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui_draw.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_draw.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_draw.cpp.s

lib/ThirdParty/imgui/imgui_impl_glfw.o: lib/ThirdParty/imgui/imgui_impl_glfw.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_impl_glfw.o

# target to build an object file
lib/ThirdParty/imgui/imgui_impl_glfw.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_impl_glfw.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_impl_glfw.cpp.o

lib/ThirdParty/imgui/imgui_impl_glfw.i: lib/ThirdParty/imgui/imgui_impl_glfw.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_impl_glfw.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui_impl_glfw.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_impl_glfw.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_impl_glfw.cpp.i

lib/ThirdParty/imgui/imgui_impl_glfw.s: lib/ThirdParty/imgui/imgui_impl_glfw.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_impl_glfw.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui_impl_glfw.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_impl_glfw.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_impl_glfw.cpp.s

lib/ThirdParty/imgui/imgui_impl_opengl3.o: lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_impl_opengl3.o

# target to build an object file
lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.o

lib/ThirdParty/imgui/imgui_impl_opengl3.i: lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_impl_opengl3.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.i

lib/ThirdParty/imgui/imgui_impl_opengl3.s: lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_impl_opengl3.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_impl_opengl3.cpp.s

lib/ThirdParty/imgui/imgui_tables.o: lib/ThirdParty/imgui/imgui_tables.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_tables.o

# target to build an object file
lib/ThirdParty/imgui/imgui_tables.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_tables.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_tables.cpp.o

lib/ThirdParty/imgui/imgui_tables.i: lib/ThirdParty/imgui/imgui_tables.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_tables.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui_tables.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_tables.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_tables.cpp.i

lib/ThirdParty/imgui/imgui_tables.s: lib/ThirdParty/imgui/imgui_tables.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_tables.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui_tables.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_tables.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_tables.cpp.s

lib/ThirdParty/imgui/imgui_widgets.o: lib/ThirdParty/imgui/imgui_widgets.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_widgets.o

# target to build an object file
lib/ThirdParty/imgui/imgui_widgets.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_widgets.cpp.o
.PHONY : lib/ThirdParty/imgui/imgui_widgets.cpp.o

lib/ThirdParty/imgui/imgui_widgets.i: lib/ThirdParty/imgui/imgui_widgets.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_widgets.i

# target to preprocess a source file
lib/ThirdParty/imgui/imgui_widgets.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_widgets.cpp.i
.PHONY : lib/ThirdParty/imgui/imgui_widgets.cpp.i

lib/ThirdParty/imgui/imgui_widgets.s: lib/ThirdParty/imgui/imgui_widgets.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_widgets.s

# target to generate assembly for a file
lib/ThirdParty/imgui/imgui_widgets.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/imgui_widgets.cpp.s
.PHONY : lib/ThirdParty/imgui/imgui_widgets.cpp.s

lib/ThirdParty/imgui/misc/freetype/imgui_freetype.o: lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.o
.PHONY : lib/ThirdParty/imgui/misc/freetype/imgui_freetype.o

# target to build an object file
lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.o
.PHONY : lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.o

lib/ThirdParty/imgui/misc/freetype/imgui_freetype.i: lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.i
.PHONY : lib/ThirdParty/imgui/misc/freetype/imgui_freetype.i

# target to preprocess a source file
lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.i
.PHONY : lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.i

lib/ThirdParty/imgui/misc/freetype/imgui_freetype.s: lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.s
.PHONY : lib/ThirdParty/imgui/misc/freetype/imgui_freetype.s

# target to generate assembly for a file
lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.s
.PHONY : lib/ThirdParty/imgui/misc/freetype/imgui_freetype.cpp.s

lib/ThirdParty/sqlite/sqlite3.o: lib/ThirdParty/sqlite/sqlite3.c.o
.PHONY : lib/ThirdParty/sqlite/sqlite3.o

# target to build an object file
lib/ThirdParty/sqlite/sqlite3.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/sqlite/sqlite3.c.o
.PHONY : lib/ThirdParty/sqlite/sqlite3.c.o

lib/ThirdParty/sqlite/sqlite3.i: lib/ThirdParty/sqlite/sqlite3.c.i
.PHONY : lib/ThirdParty/sqlite/sqlite3.i

# target to preprocess a source file
lib/ThirdParty/sqlite/sqlite3.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/sqlite/sqlite3.c.i
.PHONY : lib/ThirdParty/sqlite/sqlite3.c.i

lib/ThirdParty/sqlite/sqlite3.s: lib/ThirdParty/sqlite/sqlite3.c.s
.PHONY : lib/ThirdParty/sqlite/sqlite3.s

# target to generate assembly for a file
lib/ThirdParty/sqlite/sqlite3.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/sqlite/sqlite3.c.s
.PHONY : lib/ThirdParty/sqlite/sqlite3.c.s

lib/ThirdParty/whereami/whereami.o: lib/ThirdParty/whereami/whereami.c.o
.PHONY : lib/ThirdParty/whereami/whereami.o

# target to build an object file
lib/ThirdParty/whereami/whereami.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/whereami/whereami.c.o
.PHONY : lib/ThirdParty/whereami/whereami.c.o

lib/ThirdParty/whereami/whereami.i: lib/ThirdParty/whereami/whereami.c.i
.PHONY : lib/ThirdParty/whereami/whereami.i

# target to preprocess a source file
lib/ThirdParty/whereami/whereami.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/whereami/whereami.c.i
.PHONY : lib/ThirdParty/whereami/whereami.c.i

lib/ThirdParty/whereami/whereami.s: lib/ThirdParty/whereami/whereami.c.s
.PHONY : lib/ThirdParty/whereami/whereami.s

# target to generate assembly for a file
lib/ThirdParty/whereami/whereami.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/ThirdParty/whereami/whereami.c.s
.PHONY : lib/ThirdParty/whereami/whereami.c.s

lib/log.o: lib/log.c.o
.PHONY : lib/log.o

# target to build an object file
lib/log.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/log.c.o
.PHONY : lib/log.c.o

lib/log.i: lib/log.c.i
.PHONY : lib/log.i

# target to preprocess a source file
lib/log.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/log.c.i
.PHONY : lib/log.c.i

lib/log.s: lib/log.c.s
.PHONY : lib/log.s

# target to generate assembly for a file
lib/log.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/log.c.s
.PHONY : lib/log.c.s

lib/queue.o: lib/queue.c.o
.PHONY : lib/queue.o

# target to build an object file
lib/queue.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/queue.c.o
.PHONY : lib/queue.c.o

lib/queue.i: lib/queue.c.i
.PHONY : lib/queue.i

# target to preprocess a source file
lib/queue.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/queue.c.i
.PHONY : lib/queue.c.i

lib/queue.s: lib/queue.c.s
.PHONY : lib/queue.s

# target to generate assembly for a file
lib/queue.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/lib/queue.c.s
.PHONY : lib/queue.c.s

src/Core/IecProject.o: src/Core/IecProject.cpp.o
.PHONY : src/Core/IecProject.o

# target to build an object file
src/Core/IecProject.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/IecProject.cpp.o
.PHONY : src/Core/IecProject.cpp.o

src/Core/IecProject.i: src/Core/IecProject.cpp.i
.PHONY : src/Core/IecProject.i

# target to preprocess a source file
src/Core/IecProject.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/IecProject.cpp.i
.PHONY : src/Core/IecProject.cpp.i

src/Core/IecProject.s: src/Core/IecProject.cpp.s
.PHONY : src/Core/IecProject.s

# target to generate assembly for a file
src/Core/IecProject.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/IecProject.cpp.s
.PHONY : src/Core/IecProject.cpp.s

src/Core/Object.o: src/Core/Object.cpp.o
.PHONY : src/Core/Object.o

# target to build an object file
src/Core/Object.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/Object.cpp.o
.PHONY : src/Core/Object.cpp.o

src/Core/Object.i: src/Core/Object.cpp.i
.PHONY : src/Core/Object.i

# target to preprocess a source file
src/Core/Object.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/Object.cpp.i
.PHONY : src/Core/Object.cpp.i

src/Core/Object.s: src/Core/Object.cpp.s
.PHONY : src/Core/Object.s

# target to generate assembly for a file
src/Core/Object.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/Object.cpp.s
.PHONY : src/Core/Object.cpp.s

src/Core/ui_core.o: src/Core/ui_core.cpp.o
.PHONY : src/Core/ui_core.o

# target to build an object file
src/Core/ui_core.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/ui_core.cpp.o
.PHONY : src/Core/ui_core.cpp.o

src/Core/ui_core.i: src/Core/ui_core.cpp.i
.PHONY : src/Core/ui_core.i

# target to preprocess a source file
src/Core/ui_core.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/ui_core.cpp.i
.PHONY : src/Core/ui_core.cpp.i

src/Core/ui_core.s: src/Core/ui_core.cpp.s
.PHONY : src/Core/ui_core.s

# target to generate assembly for a file
src/Core/ui_core.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Core/ui_core.cpp.s
.PHONY : src/Core/ui_core.cpp.s

src/UI_MainGL.o: src/UI_MainGL.cpp.o
.PHONY : src/UI_MainGL.o

# target to build an object file
src/UI_MainGL.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/UI_MainGL.cpp.o
.PHONY : src/UI_MainGL.cpp.o

src/UI_MainGL.i: src/UI_MainGL.cpp.i
.PHONY : src/UI_MainGL.i

# target to preprocess a source file
src/UI_MainGL.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/UI_MainGL.cpp.i
.PHONY : src/UI_MainGL.cpp.i

src/UI_MainGL.s: src/UI_MainGL.cpp.s
.PHONY : src/UI_MainGL.s

# target to generate assembly for a file
src/UI_MainGL.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/UI_MainGL.cpp.s
.PHONY : src/UI_MainGL.cpp.s

src/UI_Style.o: src/UI_Style.cpp.o
.PHONY : src/UI_Style.o

# target to build an object file
src/UI_Style.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/UI_Style.cpp.o
.PHONY : src/UI_Style.cpp.o

src/UI_Style.i: src/UI_Style.cpp.i
.PHONY : src/UI_Style.i

# target to preprocess a source file
src/UI_Style.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/UI_Style.cpp.i
.PHONY : src/UI_Style.cpp.i

src/UI_Style.s: src/UI_Style.cpp.s
.PHONY : src/UI_Style.s

# target to generate assembly for a file
src/UI_Style.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/UI_Style.cpp.s
.PHONY : src/UI_Style.cpp.s

src/Widgets/Basics.o: src/Widgets/Basics.cpp.o
.PHONY : src/Widgets/Basics.o

# target to build an object file
src/Widgets/Basics.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/Basics.cpp.o
.PHONY : src/Widgets/Basics.cpp.o

src/Widgets/Basics.i: src/Widgets/Basics.cpp.i
.PHONY : src/Widgets/Basics.i

# target to preprocess a source file
src/Widgets/Basics.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/Basics.cpp.i
.PHONY : src/Widgets/Basics.cpp.i

src/Widgets/Basics.s: src/Widgets/Basics.cpp.s
.PHONY : src/Widgets/Basics.s

# target to generate assembly for a file
src/Widgets/Basics.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/Basics.cpp.s
.PHONY : src/Widgets/Basics.cpp.s

src/Widgets/Graphs.o: src/Widgets/Graphs.cpp.o
.PHONY : src/Widgets/Graphs.o

# target to build an object file
src/Widgets/Graphs.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/Graphs.cpp.o
.PHONY : src/Widgets/Graphs.cpp.o

src/Widgets/Graphs.i: src/Widgets/Graphs.cpp.i
.PHONY : src/Widgets/Graphs.i

# target to preprocess a source file
src/Widgets/Graphs.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/Graphs.cpp.i
.PHONY : src/Widgets/Graphs.cpp.i

src/Widgets/Graphs.s: src/Widgets/Graphs.cpp.s
.PHONY : src/Widgets/Graphs.s

# target to generate assembly for a file
src/Widgets/Graphs.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/Graphs.cpp.s
.PHONY : src/Widgets/Graphs.cpp.s

src/Widgets/LadderElement.o: src/Widgets/LadderElement.cpp.o
.PHONY : src/Widgets/LadderElement.o

# target to build an object file
src/Widgets/LadderElement.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/LadderElement.cpp.o
.PHONY : src/Widgets/LadderElement.cpp.o

src/Widgets/LadderElement.i: src/Widgets/LadderElement.cpp.i
.PHONY : src/Widgets/LadderElement.i

# target to preprocess a source file
src/Widgets/LadderElement.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/LadderElement.cpp.i
.PHONY : src/Widgets/LadderElement.cpp.i

src/Widgets/LadderElement.s: src/Widgets/LadderElement.cpp.s
.PHONY : src/Widgets/LadderElement.s

# target to generate assembly for a file
src/Widgets/LadderElement.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/LadderElement.cpp.s
.PHONY : src/Widgets/LadderElement.cpp.s

src/Widgets/TextEditor.o: src/Widgets/TextEditor.cpp.o
.PHONY : src/Widgets/TextEditor.o

# target to build an object file
src/Widgets/TextEditor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/TextEditor.cpp.o
.PHONY : src/Widgets/TextEditor.cpp.o

src/Widgets/TextEditor.i: src/Widgets/TextEditor.cpp.i
.PHONY : src/Widgets/TextEditor.i

# target to preprocess a source file
src/Widgets/TextEditor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/TextEditor.cpp.i
.PHONY : src/Widgets/TextEditor.cpp.i

src/Widgets/TextEditor.s: src/Widgets/TextEditor.cpp.s
.PHONY : src/Widgets/TextEditor.s

# target to generate assembly for a file
src/Widgets/TextEditor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Widgets/TextEditor.cpp.s
.PHONY : src/Widgets/TextEditor.cpp.s

src/Windows/MainWindow.o: src/Windows/MainWindow.cpp.o
.PHONY : src/Windows/MainWindow.o

# target to build an object file
src/Windows/MainWindow.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Windows/MainWindow.cpp.o
.PHONY : src/Windows/MainWindow.cpp.o

src/Windows/MainWindow.i: src/Windows/MainWindow.cpp.i
.PHONY : src/Windows/MainWindow.i

# target to preprocess a source file
src/Windows/MainWindow.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Windows/MainWindow.cpp.i
.PHONY : src/Windows/MainWindow.cpp.i

src/Windows/MainWindow.s: src/Windows/MainWindow.cpp.s
.PHONY : src/Windows/MainWindow.s

# target to generate assembly for a file
src/Windows/MainWindow.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/L-PLC_IDE.dir/build.make CMakeFiles/L-PLC_IDE.dir/src/Windows/MainWindow.cpp.s
.PHONY : src/Windows/MainWindow.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... L-PLC_IDE"
	@echo "... lib/ThirdParty/GL/unix/gl3w.o"
	@echo "... lib/ThirdParty/GL/unix/gl3w.i"
	@echo "... lib/ThirdParty/GL/unix/gl3w.s"
	@echo "... lib/ThirdParty/JSON/cJSON.o"
	@echo "... lib/ThirdParty/JSON/cJSON.i"
	@echo "... lib/ThirdParty/JSON/cJSON.s"
	@echo "... lib/ThirdParty/SHA2/WjCryptLib_Sha256.o"
	@echo "... lib/ThirdParty/SHA2/WjCryptLib_Sha256.i"
	@echo "... lib/ThirdParty/SHA2/WjCryptLib_Sha256.s"
	@echo "... lib/ThirdParty/imgui/imgui.o"
	@echo "... lib/ThirdParty/imgui/imgui.i"
	@echo "... lib/ThirdParty/imgui/imgui.s"
	@echo "... lib/ThirdParty/imgui/imgui_demo.o"
	@echo "... lib/ThirdParty/imgui/imgui_demo.i"
	@echo "... lib/ThirdParty/imgui/imgui_demo.s"
	@echo "... lib/ThirdParty/imgui/imgui_draw.o"
	@echo "... lib/ThirdParty/imgui/imgui_draw.i"
	@echo "... lib/ThirdParty/imgui/imgui_draw.s"
	@echo "... lib/ThirdParty/imgui/imgui_impl_glfw.o"
	@echo "... lib/ThirdParty/imgui/imgui_impl_glfw.i"
	@echo "... lib/ThirdParty/imgui/imgui_impl_glfw.s"
	@echo "... lib/ThirdParty/imgui/imgui_impl_opengl3.o"
	@echo "... lib/ThirdParty/imgui/imgui_impl_opengl3.i"
	@echo "... lib/ThirdParty/imgui/imgui_impl_opengl3.s"
	@echo "... lib/ThirdParty/imgui/imgui_tables.o"
	@echo "... lib/ThirdParty/imgui/imgui_tables.i"
	@echo "... lib/ThirdParty/imgui/imgui_tables.s"
	@echo "... lib/ThirdParty/imgui/imgui_widgets.o"
	@echo "... lib/ThirdParty/imgui/imgui_widgets.i"
	@echo "... lib/ThirdParty/imgui/imgui_widgets.s"
	@echo "... lib/ThirdParty/imgui/misc/freetype/imgui_freetype.o"
	@echo "... lib/ThirdParty/imgui/misc/freetype/imgui_freetype.i"
	@echo "... lib/ThirdParty/imgui/misc/freetype/imgui_freetype.s"
	@echo "... lib/ThirdParty/sqlite/sqlite3.o"
	@echo "... lib/ThirdParty/sqlite/sqlite3.i"
	@echo "... lib/ThirdParty/sqlite/sqlite3.s"
	@echo "... lib/ThirdParty/whereami/whereami.o"
	@echo "... lib/ThirdParty/whereami/whereami.i"
	@echo "... lib/ThirdParty/whereami/whereami.s"
	@echo "... lib/log.o"
	@echo "... lib/log.i"
	@echo "... lib/log.s"
	@echo "... lib/queue.o"
	@echo "... lib/queue.i"
	@echo "... lib/queue.s"
	@echo "... src/Core/IecProject.o"
	@echo "... src/Core/IecProject.i"
	@echo "... src/Core/IecProject.s"
	@echo "... src/Core/Object.o"
	@echo "... src/Core/Object.i"
	@echo "... src/Core/Object.s"
	@echo "... src/Core/ui_core.o"
	@echo "... src/Core/ui_core.i"
	@echo "... src/Core/ui_core.s"
	@echo "... src/UI_MainGL.o"
	@echo "... src/UI_MainGL.i"
	@echo "... src/UI_MainGL.s"
	@echo "... src/UI_Style.o"
	@echo "... src/UI_Style.i"
	@echo "... src/UI_Style.s"
	@echo "... src/Widgets/Basics.o"
	@echo "... src/Widgets/Basics.i"
	@echo "... src/Widgets/Basics.s"
	@echo "... src/Widgets/Graphs.o"
	@echo "... src/Widgets/Graphs.i"
	@echo "... src/Widgets/Graphs.s"
	@echo "... src/Widgets/LadderElement.o"
	@echo "... src/Widgets/LadderElement.i"
	@echo "... src/Widgets/LadderElement.s"
	@echo "... src/Widgets/TextEditor.o"
	@echo "... src/Widgets/TextEditor.i"
	@echo "... src/Widgets/TextEditor.s"
	@echo "... src/Windows/MainWindow.o"
	@echo "... src/Windows/MainWindow.i"
	@echo "... src/Windows/MainWindow.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

